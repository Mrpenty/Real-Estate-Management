@{
    ViewData["Title"] = "Chỉnh sửa thông tin";
}

<div class="max-w-4xl mx-auto py-8">
    <h1 class="text-3xl font-bold text-gray-900 mb-6">Chỉnh sửa thông tin cá nhân</h1>

    <div id="edit-profile-form-container" class="bg-white shadow-lg rounded-2xl p-8">
        <!-- Loading State -->
        <div id="loading-state" class="text-center">
            <p>Đang tải thông tin...</p>
        </div>

        <!-- Form -->
        <form id="edit-profile-form" class="hidden space-y-6">
            <!-- Profile Picture -->
            <div class="flex flex-col items-center">
                <img id="avatar-preview" src="/image/default-avatar.png" alt="Ảnh đại diện" class="w-32 h-32 rounded-full object-cover border-4 border-gray-200 shadow-md mb-4">
                <input type="file" id="profilePicture" name="profilePicture" class="text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100"/>
                <p class="text-xs text-gray-500 mt-1">Chọn ảnh mới (PNG, JPG, GIF)</p>
            </div>
            
            <!-- Name -->
            <div>
                <label for="name" class="block text-sm font-medium text-gray-700">Tên hiển thị</label>
                <input type="text" id="name" name="name" class="mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" required>
            </div>

            <!-- Email (Read-only) -->
            <div>
                <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
                <input type="email" id="email" name="email" class="mt-1 block w-full px-3 py-2 bg-gray-100 border border-gray-300 rounded-md shadow-sm" readonly>
            </div>

            <!-- Phone Number -->
            <div>
                <label for="phoneNumber" class="block text-sm font-medium text-gray-700">Số điện thoại</label>
                <input type="tel" id="phoneNumber" name="phoneNumber" class="mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
            </div>

            <!-- Action Buttons -->
            <div class="flex justify-end space-x-4 pt-4">
                <a href="/Profile" class="bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 rounded-lg transition duration-300">Hủy</a>
                <button type="submit" id="save-button" class="bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded-lg shadow-md transition duration-300">
                    Lưu thay đổi
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
<script>
document.addEventListener('DOMContentLoaded', function () {
    const apiBaseUrl = 'https://localhost:7031';
    const form = document.getElementById('edit-profile-form');
    const loadingState = document.getElementById('loading-state');
    const avatarPreview = document.getElementById('avatar-preview');
    const profilePictureInput = document.getElementById('profilePicture');
    
    function getCookie(name) {
        let value = '; ' + document.cookie;
        let parts = value.split('; ' + name + '=');
        if (parts.length === 2) return parts.pop().split(';').shift();
        return null;
    }
    const token = getCookie('accessToken');

    // 1. Fetch current profile data and populate the form
    fetch(`${apiBaseUrl}/api/User/Get-Profile`, {
        credentials: 'include',
        headers: { 'Content-Type': 'application/json' }
    })
    .then(res => {
        if (!res.ok) throw new Error('Không thể tải dữ liệu.');
        return res.json();
    })
    .then(profile => {
        document.getElementById('name').value = profile.name || '';
        document.getElementById('email').value = profile.email || '';
        document.getElementById('phoneNumber').value = profile.phoneNumber || '';
        avatarPreview.src = profile.profilePictureUrl ? `${apiBaseUrl}/${profile.profilePictureUrl}` : '/image/default-avatar.png';
        
        loadingState.classList.add('hidden');
        form.classList.remove('hidden');
    })
    .catch(error => {
        loadingState.innerHTML = `<p class="text-red-600">${error.message}</p>`;
    });
    
    // 2. Preview selected image
    profilePictureInput.addEventListener('change', function(event) {
        if (event.target.files && event.target.files[0]) {
            const reader = new FileReader();
            reader.onload = function(e) {
                avatarPreview.src = e.target.result;
            }
            reader.readAsDataURL(event.target.files[0]);
        }
    });

    // 3. Handle form submission
    form.addEventListener('submit', async function (e) {
        e.preventDefault();
        const saveButton = document.getElementById('save-button');
        saveButton.disabled = true;
        saveButton.textContent = 'Đang lưu...';

        try {
            // Step 3a: Upload profile picture if changed
            const pictureFile = profilePictureInput.files[0];
            if (pictureFile) {
                const pictureFormData = new FormData();
                pictureFormData.append('file', pictureFile);

                const picResponse = await fetch(`${apiBaseUrl}/api/User/profile-picture`, {
                    method: 'POST',
                    credentials: 'include',
                    body: pictureFormData
                });

                if (!picResponse.ok) throw new Error('Cập nhật ảnh đại diện thất bại.');
            }

            // Step 3b: Update profile information
            const profileData = {
                name: document.getElementById('name').value,
                email: document.getElementById('email').value,
                phoneNumber: document.getElementById('phoneNumber').value
            };

            const profileResponse = await fetch(`${apiBaseUrl}/api/User/Update-profile`, {
                method: 'PUT',
                credentials: 'include',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(profileData)
            });

            if (!profileResponse.ok) {
                const errorData = await profileResponse.json();
                throw new Error(errorData.message || 'Cập nhật thông tin thất bại.');
            }
            
            alert('Cập nhật thông tin thành công!');
            window.location.href = '/Profile';

        } catch (error) {
            alert(`Lỗi: ${error.message}`);
        } finally {
            saveButton.disabled = false;
            saveButton.textContent = 'Lưu thay đổi';
        }
    });
});
</script>
} 