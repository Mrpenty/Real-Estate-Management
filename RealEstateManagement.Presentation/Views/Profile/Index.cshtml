@{
    Layout = "~/Views/Shared/_LayoutV2.cshtml";
    ViewData["Title"] = "Thông tin cá nhân";
}

<link rel="stylesheet" href="~/css/profile.css">

<div id="profile-container" class="profile-container">
    <div class="loading">
        <p>Đang tải thông tin cá nhân...</p>
    </div>
</div>

<div id="change-password-modal" class="modal">
    <div class="modal-content">
        <button id="close-modal-btn" class="modal-close">&times;</button>
        <h2>Đổi mật khẩu</h2>
        <form id="change-password-form">
            <div class="form-group">
                <label for="oldPassword">Mật khẩu cũ</label>
                <input type="password" id="oldPassword" name="oldPassword" required />
            </div>
            <div class="form-group">
                <label for="newPassword">Mật khẩu mới</label>
                <input type="password" id="newPassword" name="newPassword" required />
            </div>
            <div class="form-group">
                <label for="confirmPassword">Nhập lại mật khẩu mới</label>
                <input type="password" id="confirmPassword" name="confirmPassword" required />
            </div>
            <div id="change-password-error" class="error-message"></div>
            <div style="text-align: right;">
                <button type="submit" class="btn btn-warning">Xác nhận</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
<script>
document.addEventListener('DOMContentLoaded', function() {
    function getCookie(name) {
        let value = '; ' + document.cookie;
        let parts = value.split('; ' + name + '=');
        if (parts.length === 2) return parts.pop().split(';').shift();
    }
    const token = localStorage.getItem('authToken') || getCookie('accessToken');
    
    const apiBaseUrl = 'https://localhost:7031';

    fetch(`${apiBaseUrl}/api/User/Get-Profile`, {
        method: 'GET',
        credentials: 'include',
        headers: {
            'Content-Type': 'application/json'
        }
    })
    .then(res => {
        if (!res.ok) {
            throw new Error('Không thể tải thông tin cá nhân. Vui lòng đăng nhập lại.');
        }
        return res.json();
    })
    .then(profile => {
        function verificationBadge(isVerified, text = 'Đã xác thực') {
            return isVerified
                ? `<span class="badge badge-success">${text}</span>`
                : `<span class="badge badge-danger">Chưa xác thực</span>`;
        }

        const profileHtml = `
            <div class="profile-card">
                <div class="profile-header">
                    <div>
                        <img src="${profile.profilePictureUrl ? `${apiBaseUrl}/${profile.profilePictureUrl}` : '/image/default-avatar.png'}" alt="Ảnh đại diện" class="profile-avatar">
                    </div>
                    <div class="profile-info">
                        <h1>${profile.name || 'Người dùng mới'}</h1>
                        <p>${profile.role || 'Chưa có vai trò'}</p>
                    </div>
                </div>

                <div class="profile-details">
                    <h2>Thông tin chi tiết</h2>
                    <div class="detail-item">
                        <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                        </svg>
                        <span>${profile.email || 'Chưa cập nhật'}</span>
                        ${verificationBadge(profile.emailConfirmed)}
                    </div>
                    <div class="detail-item">
                        <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                        </svg>
                        <span>${profile.phoneNumber || 'Chưa cập nhật'}</span>
                        ${verificationBadge(profile.phoneNumberConfirmed)}
                    </div>
                    <div class="detail-item">
                        <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        <span>Tài khoản:</span>
                        ${verificationBadge(profile.isVerified, 'Đã được xác minh')}
                    </div>
                </div>

                <div class="profile-actions">
                    <a href="/Profile/Edit" class="btn btn-primary">Chỉnh sửa thông tin</a>
                    <button id="btn-change-password" class="btn btn-warning">Đổi mật khẩu</button>
                </div>
            </div>
        `;
        document.getElementById('profile-container').innerHTML = profileHtml;

        // Modal logic
        const btnChangePassword = document.getElementById('btn-change-password');
        const modal = document.getElementById('change-password-modal');
        const closeModalBtn = document.getElementById('close-modal-btn');
        
        btnChangePassword.addEventListener('click', function() {
            modal.classList.add('show');
        });
        
        closeModalBtn.addEventListener('click', function() {
            modal.classList.remove('show');
            document.getElementById('change-password-form').reset();
            document.getElementById('change-password-error').textContent = '';
            document.getElementById('change-password-error').className = 'error-message';
        });
        
        window.addEventListener('click', function(e) {
            if (e.target === modal) {
                modal.classList.remove('show');
                document.getElementById('change-password-form').reset();
                document.getElementById('change-password-error').textContent = '';
                document.getElementById('change-password-error').className = 'error-message';
            }
        });

        // Submit form đổi mật khẩu
        document.getElementById('change-password-form').addEventListener('submit', function(e) {
            e.preventDefault();
            const oldPassword = document.getElementById('oldPassword').value;
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const errorDiv = document.getElementById('change-password-error');
            errorDiv.textContent = '';

            // Validate
            if (oldPassword === newPassword) {
                errorDiv.textContent = 'Mật khẩu mới không được trùng mật khẩu cũ.';
                return;
            }
            if (newPassword.length < 6) {
                errorDiv.textContent = 'Mật khẩu mới phải tối thiểu 6 ký tự.';
                return;
            }
            if (newPassword !== confirmPassword) {
                errorDiv.textContent = 'Nhập lại mật khẩu mới không khớp.';
                return;
            }

            // Gọi API đổi mật khẩu
            fetch(`${apiBaseUrl}/api/User/reset-password`, {
                method: 'PUT',
                credentials: 'include',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ oldPassword, newPassword })
            })
            .then(res => res.json().then(data => ({ ok: res.ok, data })))
            .then(({ ok, data }) => {
                if (ok) {
                    errorDiv.className = 'success-message';
                    errorDiv.textContent = 'Đổi mật khẩu thành công!';
                    setTimeout(() => {
                        modal.classList.remove('show');
                        document.getElementById('change-password-form').reset();
                        errorDiv.textContent = '';
                        errorDiv.className = 'error-message';
                    }, 1500);
                } else {
                    errorDiv.textContent = (data.errors && Array.isArray(data.errors)) ? data.errors.join(', ') : (data.message || 'Đổi mật khẩu thất bại!');
                }
            })
            .catch(() => {
                errorDiv.textContent = 'Có lỗi xảy ra, vui lòng thử lại sau.';
            });
        });
    })
    .catch(err => {
        document.getElementById('profile-container').innerHTML = `<div class="error-display"><p>${err.message}</p></div>`;
    });
});
</script>
} 