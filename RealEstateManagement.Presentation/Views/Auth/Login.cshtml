@{
    Layout = "~/Views/Auth/_AuthLayout.cshtml";
    ViewBag.Title = "Đăng nhập";
}

<div class="w-full p-10 bg-white/80 rounded-l-none rounded-3xl">
    <h2 class="text-lg text-gray-600">Chào mừng đến <span class="text-yellow-500 font-semibold">SREM.AI</span></h2>
    <h1 class="text-3xl font-bold mt-1 mb-6">Đăng nhập</h1>

    <form id="loginForm">
        <label class="block mb-2 text-sm font-medium text-gray-700" for="phoneNumber">Số điện thoại</label>
        <div class="mb-4">
            <input type="tel" id="phoneNumber" name="phoneNumber" 
                   placeholder="Số điện thoại" 
                   class="w-full border border-gray-300 rounded-md px-3 py-2 text-sm input-bootstrap" 
                   required />
            <div class="text-xs text-gray-500 mt-1">Vui lòng nhập số điện thoại bắt đầu bằng 0 và có 10 chữ số</div>
        </div>

        <label class="block mb-2 text-sm font-medium text-gray-700" for="password">Mật khẩu</label>
        <div class="mb-2">
            <input type="password" id="password" name="password" 
                   placeholder="Mật khẩu" 
                   class="w-full border border-gray-300 rounded-md px-3 py-2 text-sm input-bootstrap" 
                   required />
        </div>

        <a href="/Auth/ForgotPassword" class="text-blue-600 hover:text-blue-800 text-sm">Quên mật khẩu?</a>

        <button type="submit" 
                class="mt-4 w-full bg-orange-500 hover:bg-orange-600 text-white font-semibold py-2 rounded-full mb-6 transition">
            Đăng nhập
        </button>

        <div id="errorMessage" class="hidden bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert"></div>

        <div class="flex items-center my-4">
            <hr class="flex-grow border-gray-300" />
            <span class="mx-4 text-sm text-gray-500">hoặc đăng nhập bằng</span>
            <hr class="flex-grow border-gray-300" />
        </div>

        <div class="flex justify-between gap-4 mb-6">
            <button type="button" onclick="handleGoogleLogin()" 
                    class="w-1/2 border border-gray-300 rounded-lg py-2 flex items-center justify-center gap-2 hover:bg-gray-100 transition">
                <img src="https://img.icons8.com/color/16/google-logo.png" alt="Google" />
                Google
            </button>
            <button type="button" onclick="authService.facebookLogin()" 
                    class="w-1/2 border border-gray-300 rounded-lg py-2 flex items-center justify-center gap-2 hover:bg-gray-100 transition">
                <img src="https://img.icons8.com/fluency/16/facebook-new.png" alt="Facebook" />
                Facebook
            </button>
        </div>

        <p class="text-sm text-center text-gray-600">
            Chưa có tài khoản? <a href="/Auth/Register" class="text-orange-500 font-medium hover:underline">Đăng Ký Ngay</a>
        </p>
        <p class="text-sm text-center text-gray-600 mt-2">
            <a href="/" class="text-orange-500 font-medium hover:underline">Về trang chủ</a>
        </p>
    </form>
</div>

@section Scripts {
    <script>
        document.getElementById('loginForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            let phone = document.getElementById('phoneNumber').value.trim();
            const password = document.getElementById('password').value;
            const errorMessage = document.getElementById('errorMessage');
            
            // Validate phone number format
            if (!authService.validatePhoneNumber(phone)) {
                errorMessage.textContent = 'Số điện thoại phải bắt đầu bằng 0 và có 10 chữ số';
                errorMessage.style.display = 'block';
                return;
            }

            try {
                const data = await authService.login(phone, password);
                if (data.isAuthSuccessful) {
                    window.location.href = '/';
                } else {
                    errorMessage.textContent = data.errorMessage || 'Đăng nhập thất bại';
                    errorMessage.style.display = 'block';
                }
            } catch (error) {
                console.error('Login error:', error);
                errorMessage.textContent = error.message || 'Có lỗi xảy ra khi đăng nhập';
                errorMessage.style.display = 'block';
            }
        });

        document.getElementById('phoneNumber').addEventListener('input', function(e) {
            let value = e.target.value.trim();
            // Remove any non-digit characters except leading 0
            value = value.replace(/[^\d]/g, '');
            if (value.length > 0 && !value.startsWith('0')) {
                value = '0' + value;
            }
            if (value.length > 10) {
                value = value.substring(0, 10);
            }
            e.target.value = value;
        });

        function handleGoogleLogin() {
            const clientId = "944025248011-2a95pmqqhlp6skoi9lippbvm7ierc8h7.apps.googleusercontent.com"; // Your Google Client ID
            const redirectUri = "https://localhost:7031/api/Auth/google-oauth-callback"; // Must match the Authorized redirect URI in Google Cloud Console
            const scope = "email profile openid";
            const responseType = "code";
            const accessType = "offline"; // To get a refresh token if needed
            const prompt = "consent"; // To always show the consent screen

            const googleAuthUrl = `https://accounts.google.com/o/oauth2/v2/auth?
client_id=${clientId}
&redirect_uri=${encodeURIComponent(redirectUri)}
&response_type=${responseType}
&scope=${encodeURIComponent(scope)}
&access_type=${accessType}
&prompt=${prompt}`.replace(/\n/g, ''); // Remove newlines for URL

            window.location.href = googleAuthUrl;
        }

        // Check for error message in URL query parameters
        const urlParams = new URLSearchParams(window.location.search);
        const errorMessageFromUrl = urlParams.get('error');
        if (errorMessageFromUrl) {
            document.getElementById('errorMessage').textContent = errorMessageFromUrl;
            document.getElementById('errorMessage').classList.remove('hidden');
        }

    </script>
} 