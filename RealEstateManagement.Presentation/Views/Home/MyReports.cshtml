@{
    Layout = "../Shared/_LayoutV2.cshtml";
}
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Report của tôi - SREM.AI</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
    </style>
</head>
<body class="bg-gray-100 min-h-screen p-8">
    <div class="max-w-7xl mx-auto bg-white rounded-2xl shadow-xl overflow-hidden">
        <div class="p-6 border-b border-gray-200 bg-orange-50">
            <h1 class="text-3xl font-bold text-orange-600">Báo cáo của tôi</h1>
            <p class="mt-2 text-gray-600">Xem lại các báo cáo bạn đã gửi và trạng thái xử lý của chúng.</p>
        </div>

        <div class="p-6">
            <div id="loading" class="text-center text-gray-500 text-lg font-medium py-10 hidden">Đang tải dữ liệu...</div>
            <div id="no-reports" class="text-center text-gray-500 text-lg font-medium py-10 hidden">Bạn chưa gửi báo cáo nào.</div>
            <div id="error-message" class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg relative hidden" role="alert">
                <span class="block sm:inline">Có lỗi xảy ra khi tải báo cáo. Vui lòng thử lại sau.</span>
            </div>

            <div id="reports-container" class="overflow-x-auto">
                <table id="reports-table" class="min-w-full divide-y divide-gray-200 rounded-xl">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider rounded-tl-xl">
                                Lý do
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider">
                                Mô tả
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider">
                                Đối tượng
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider">
                                Trạng thái
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider">
                                Ngày gửi
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider">
                                Ghi chú
                            </th>
                        </tr>
                    </thead>
                    <tbody id="reports-table-body" class="bg-white divide-y divide-gray-200">
                        <!-- Report rows will be inserted here by JavaScript -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const loadingElement = document.getElementById('loading');
            const noReportsElement = document.getElementById('no-reports');
            const errorMessageElement = document.getElementById('error-message');
            const reportsContainer = document.getElementById('reports-container');
            const reportsTableBody = document.getElementById('reports-table-body');

            async function fetchMyReports() {
                // Display loading state
                loadingElement.classList.remove('hidden');
                reportsContainer.classList.add('hidden');
                noReportsElement.classList.add('hidden');
                errorMessageElement.classList.add('hidden');

                try {
                    // Check if authService exists and get current user
                    if (typeof authService === 'undefined' || !authService.isAuthenticated()) {
                        window.location.href = '/Auth/Login';
                        return;
                    }
                    const user = authService.getCurrentUser();
                    const userId = user.id; // Lấy userId từ authService
                    const token = localStorage.getItem('authToken');

                    if (!userId || !token) {
                        window.location.href = '/Auth/Login';
                        return;
                    }

                    const response = await fetch(`http://194.233.81.64:5000/api/Report/myReport/${userId}`, {
                        method: 'GET',
                        headers: {
                            'Authorization': `Bearer ${token}`
                        }
                    });

                    if (!response.ok) {
                        const errorData = await response.json();
                        console.error('API Error:', errorData);
                        throw new Error(errorData.message || 'Failed to fetch reports.');
                    }

                    const reports = await response.json();

                    // Clear previous reports
                    reportsTableBody.innerHTML = '';

                    if (reports.length === 0) {
                        noReportsElement.classList.remove('hidden');
                    } else {
                        reports.forEach(report => {
                            const formattedDate = new Date(report.reportedAt).toLocaleDateString('vi-VN', {
                                year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric'
                            });
                            const statusColor = report.status === 'PENDING' ? 'bg-yellow-100 text-yellow-800' :
                                                report.status === 'RESOLVED' ? 'bg-green-100 text-green-800' :
                                                'bg-red-100 text-red-800';

                            const row = document.createElement('tr');
                            row.className = 'hover:bg-gray-50 transition-colors duration-200';
                            row.innerHTML = `
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${report.reason}</td>
                                <td class="px-6 py-4 whitespace-normal text-sm text-gray-500 max-w-xs">${report.description}</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${report.targetType} #${report.targetId}</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm">
                                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${statusColor}">
                                        ${report.status}
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${formattedDate}</td>
                                <td class="px-6 py-4 whitespace-normal text-sm text-gray-500 max-w-xs">${report.adminNote || 'Chưa có ghi chú.'}</td>
                            `;
                            reportsTableBody.appendChild(row);
                        });
                        reportsContainer.classList.remove('hidden');
                    }
                } catch (error) {
                    console.error("Failed to load reports:", error);
                    errorMessageElement.classList.remove('hidden');
                } finally {
                    loadingElement.classList.add('hidden');
                }
            }

            // Initial fetch when the page loads
            fetchMyReports();
        });
    </script>
</body>
</html>
