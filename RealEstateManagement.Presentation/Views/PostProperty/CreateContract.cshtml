@{
    Layout = "~/Views/Shared/_RenterLayout.cshtml";
    ViewData["Title"] = "Tạo hợp đồng";
}



<div class="container mx-auto py-8">
    <div class="max-w-4xl mx-auto">
        <h1 class="text-2xl font-bold mb-4">Bước 2: Thông tin hợp đồng thuê</h1>
        <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
            <p class="text-blue-800 text-sm">
                <strong>Lưu ý:</strong> Sau khi tạo hợp đồng, bài đăng sẽ chuyển từ trạng thái Draft sang Pending để chờ phê duyệt.
            </p>
        </div>
        
        <form id="create-contract-form" class="form-section">
            <input type="hidden" id="propertyPostId" value="@ViewBag.PropertyPostId">
            
            <div class="space-y-6">
                <!-- Financial Information -->
                <div class="form-row">
                    <div>
                        <label for="depositAmount" class="block mb-2 font-medium">
                            Tiền cọc <span class="text-red-600 font-bold">(∗)</span>
                        </label>
                        <input type="number" id="depositAmount" name="depositAmount" class="form-input" required min="0" step="1000" placeholder="Vd: 2000000">
                    </div>
                    <div>
                        <label for="monthlyRent" class="block mb-2 font-medium">
                            Số tiền trả mỗi tháng <span class="text-red-600 font-bold">(∗)</span>
                        </label>
                        <input type="number" id="monthlyRent" name="monthlyRent" class="form-input" required min="0" step="1000" placeholder="Vd: 5000000">
                    </div>
                </div>

                <!-- Contract Duration -->
                <div class="form-row">
                    <div>
                        <label for="contractDurationMonths" class="block mb-2 font-medium">
                            Thời hạn hợp đồng (tháng) <span class="text-red-600 font-bold">(∗)</span>
                        </label>
                        <input type="number" id="contractDurationMonths" name="contractDurationMonths" class="form-input" required min="1" max="120" placeholder="Vd: 12">
                    </div>
                    <div>
                        <label for="startDate" class="block mb-2 font-medium">
                            Ngày bắt đầu <span class="text-red-600 font-bold">(∗)</span>
                        </label>
                        <input type="date" id="startDate" name="startDate" class="form-input" required>
                    </div>
                </div>

                <!-- Payment Settings -->
                <div class="form-row">
                    <div>
                        <label for="paymentCycle" class="block mb-2 font-medium">
                            Thanh toán kỳ hạn <span class="text-red-600 font-bold">(∗)</span>
                        </label>
                        <select id="paymentCycle" name="paymentCycle" class="form-select" required>
                            <option value="0">Monthly (Hàng tháng)</option>
                            <option value="1">Quarterly (Hàng quý)</option>
                            <option value="2">Yearly (Hàng năm)</option>
                        </select>
                    </div>
                    <div>
                        <label for="paymentDayOfMonth" class="block mb-2 font-medium">
                            Trả trước ngày nào của tháng <span class="text-red-600 font-bold">(∗)</span>
                        </label>
                        <input type="number" id="paymentDayOfMonth" name="paymentDayOfMonth" class="form-input" required min="1" max="31" value="5">
                    </div>
                </div>

                <!-- Contact Information -->
                <div class="form-row">
                    <div>
                        <label for="paymentMethod" class="block mb-2 font-medium">
                            Phương thức thanh toán <span class="text-red-600 font-bold">(∗)</span>
                        </label>
                        <input type="text" id="paymentMethod" name="paymentMethod" class="form-input" required placeholder="Vd: Chuyển khoản, tiền mặt, Momo...">
                    </div>
                    <div>
                        <label for="contactInfo" class="block mb-2 font-medium">
                            Thông tin liên hệ <span class="text-red-600 font-bold">(∗)</span>
                        </label>
                        <input type="text" id="contactInfo" name="contactInfo" class="form-input" required placeholder="Tên, số điện thoại, email...">
                    </div>
                </div>
            </div>

            <!-- Contract Summary -->
            <div class="bg-gray-50 border border-gray-200 rounded-lg p-4 mt-6">
                <h3 class="font-semibold text-gray-800 mb-3">Tóm tắt hợp đồng:</h3>
                <div class="grid grid-cols-2 gap-4 text-sm">
                    <div>
                        <span class="font-medium">Ngày kết thúc dự kiến:</span>
                        <span id="endDateDisplay" class="ml-2 text-blue-600">-</span>
                    </div>
                    <div>
                        <span class="font-medium">Tổng số tiền thuê:</span>
                        <span id="totalRentDisplay" class="ml-2 text-green-600">-</span>
                    </div>
                </div>
            </div>

            <div class="text-right mt-8">
                <button type="submit" class="bg-orange-500 hover:bg-orange-600 text-white font-bold py-3 px-8 rounded-lg transition">
                    Tạo hợp đồng và hoàn tất
                </button>
            </div>
        </form>
    </div>
</div>

<script>
// Check authentication
let isAuthen = authService.isAuthenticated();
if(!isAuthen){
    window.location.href = '/Auth/Login';
}

// Set default start date to today
document.getElementById('startDate').value = new Date().toISOString().split('T')[0];

// Function to update contract summary
function updateContractSummary() {
    const startDate = document.getElementById('startDate').value;
    const duration = parseInt(document.getElementById('contractDurationMonths').value) || 0;
    const monthlyRent = parseFloat(document.getElementById('monthlyRent').value) || 0;
    
    if (startDate && duration > 0) {
        const endDate = new Date(startDate);
        endDate.setMonth(endDate.getMonth() + duration);
        document.getElementById('endDateDisplay').textContent = endDate.toLocaleDateString('vi-VN');
    } else {
        document.getElementById('endDateDisplay').textContent = '-';
    }
    
    if (monthlyRent > 0 && duration > 0) {
        const totalRent = monthlyRent * duration;
        document.getElementById('totalRentDisplay').textContent = totalRent.toLocaleString('vi-VN') + ' VNĐ';
    } else {
        document.getElementById('totalRentDisplay').textContent = '-';
    }
}

// Add event listeners for summary updates
document.getElementById('startDate').addEventListener('change', updateContractSummary);
document.getElementById('contractDurationMonths').addEventListener('input', updateContractSummary);
document.getElementById('monthlyRent').addEventListener('input', updateContractSummary);

// Initial summary update
updateContractSummary();

document.getElementById('create-contract-form').addEventListener('submit', async function(e) {
    e.preventDefault();

    const formData = new FormData(this);
    const API_BASE_URL = 'https://localhost:7031/api';
    const token = localStorage.getItem('authToken');
    
    // Validate required fields
    const requiredFields = ['depositAmount', 'monthlyRent', 'contractDurationMonths', 'startDate', 'paymentMethod', 'contactInfo'];
    for (const field of requiredFields) {
        const value = formData.get(field);
        if (!value || value.toString().trim() === '') {
            alert(`Vui lòng điền đầy đủ thông tin: ${field}`);
            return;
        }
    }
    
    // Get current user ID from token or session
    const token = localStorage.getItem('authToken');
    let ownerId = 1; // Default to 1 if not available
    
    // Try to get user info from token
    if (token) {
        try {
            const payload = JSON.parse(atob(token.split('.')[1]));
            ownerId = payload.nameid || payload.sub || 1;
        } catch (e) {
            console.log('Could not parse token, using default ownerId');
        }
    }
    
    const data = {
        depositAmount: parseFloat(formData.get('depositAmount')),
        monthlyRent: parseFloat(formData.get('monthlyRent')),
        contractDurationMonths: parseInt(formData.get('contractDurationMonths')),
        paymentCycle: parseInt(formData.get('paymentCycle')),
        paymentDayOfMonth: parseInt(formData.get('paymentDayOfMonth')),
        startDate: formData.get('startDate'),
        paymentMethod: formData.get('paymentMethod'),
        contactInfo: formData.get('contactInfo')
    };

    try {
        // Show loading state
        const submitBtn = document.querySelector('button[type="submit"]');
        const originalText = submitBtn.textContent;
        submitBtn.textContent = 'Đang tạo hợp đồng...';
        submitBtn.disabled = true;

        const response = await fetch(`${API_BASE_URL}/owner/rental-contracts/${ownerId}/${formData.get('propertyPostId')}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                ...(token ? { 'Authorization': `Bearer ${token}` } : {})
            },
            body: JSON.stringify(data)
        });

        if (!response.ok) {
            const errorText = await response.text();
            throw new Error(errorText || 'Failed to create contract');
        }

        alert('Contract created successfully for the post');
        // Redirect to package selection after successful contract creation
        window.location.href = `/PostProperty/SelectPackage?propertyId=${formData.get('propertyPostId')}`;
    } catch (err) {
        console.error(err);
        alert(`Đã có lỗi xảy ra: ${err.message}`);
    } finally {
        // Restore button state
        const submitBtn = document.querySelector('button[type="submit"]');
        submitBtn.textContent = 'Tạo hợp đồng và hoàn tất';
        submitBtn.disabled = false;
    }
});
</script>

@section Scripts {
    <script src="~/js/authService.js"></script>
} 