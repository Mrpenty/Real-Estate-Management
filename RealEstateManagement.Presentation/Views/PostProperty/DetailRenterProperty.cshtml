@{
    Layout = "~/Views/Shared/_RenterLayout.cshtml";
    ViewData["Title"] = "Hợp đồng cho thuê";
}

<div class="bg-white px-6 pt-6 border-b" style="position:fixed;width:100%;z-index:999">
    <h1 class="text-2xl font-semibold mb-4">Hợp đồng cho thuê</h1>

    <div class="flex space-x-6 text-sm font-medium">
        <button data-scroll="ContactId" class="tab-btn text-orange-600 border-b-2 border-orange-600 pb-2">
            Thông tin hợp đồng
        </button>
    </div>
</div>
<form id="property-form">

    <div id="ContactId" style="margin-top:10rem" class="section bg-white p-6 rounded ml-20 mr-20 border mb-8">
        <h2 class="text-lg font-semibold mb-4">Thông tin hợp đồng</h2>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
                <label for="DepositAmount" class="block mb-1 font-medium">
                    Số tiền cọc
                </label>
                <input required id="DepositAmount" name="DepositAmount" type="number" class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500">
            </div>

            <div>
                <label for="MonthlyRent" class="block mb-1 font-medium">
                    Tiền thuê hàng tháng
                </label>
                <input required type="number" id="MonthlyRent" name="MonthlyRent" class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500">
            </div>

            <div>
                <label for="ContractDurationMonths" class="block mb-1 font-medium">
                    Thời hạn hợp đồng (tháng)
                </label>
                <input required id="ContractDurationMonths" min="1" value="12" name="ContractDurationMonths" type="number" class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500">
            </div>

            <div>
                <label for="PaymentCycle" class="block mb-1 font-medium">
                    Chu kỳ thanh toán
                </label>
                <select id="PaymentCycle" name="PaymentCycle" class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500">
                    <option value="0" selected>Tháng</option>
                    <option value="1">Quý</option>
                    <option value="2">Năm</option>
                </select>
            </div>

            <div>
                <label for="PaymentDayOfMonth" class="block mb-1 font-medium">
                    Ngày thanh toán cố định trong tháng
                </label>
                <input id="PaymentDayOfMonth" name="PaymentDayOfMonth" value="5" type="number" min="1" max="31" class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500">
            </div>

            <div>
                <label for="PaymentMethod" class="block mb-1 font-medium">
                    Phương thức thanh toán
                </label>
                <select id="PaymentMethod" name="PaymentMethod" class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500">
                    <option value="">-- Phương thức thanh toán --</option>
                    <option value="Bank Transfer">Bank Transfer</option>
                    <option value="Momo">Momo</option>
                </select>
            </div>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-1 gap-4 mt-4">
            <div>
                <label for="ContactInfo" class="block mb-1 font-medium">
                    Thông tin hợp đồng
                </label>
                <textarea required id="ContactInfo" class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" name="ContactInfo" style="height:10rem"></textarea>
            </div>
        </div>
    </div>

    <div class="ml-20 mr-20 mb-20">
        <button type="button" id="btn-done" class="w-full bg-orange-500 hover:bg-orange-600 text-white font-semibold py-2 rounded-full mb-6 transition">
            Hoàn tất
        </button>
    </div>
</form>

<script>
     let isAuthen = authService.isAuthenticated();
     let propertyId = @ViewBag.PropertyId;
     let id = @ViewBag.Id;
     if(!isAuthen){
         window.location.href = '/Auth/Login';
     }

     //font-bold text-blue-800
     //document.getElementById('CreatePostId').classList.add('font-bold', 'text-blue-800');

    getRentalContract();
    async function getRentalContract(){
        try{
            const token = localStorage.getItem('authToken');
            const response = await fetch(`http://194.233.81.64:5000/api/owner/rental-contracts/${propertyId}`, {
               method: 'GET',
               headers: {
                   'Content-Type': 'application/json',
                   'Accept': 'application/json',
                   ...(token ? { 'Authorization': `Bearer ${token}` } : {})
               }
            });

            const data = await response.json();

            if (!response.ok) {
                throw new Error(data.message || data.errorMessage || 'Get property failed');
            }

            $('#DepositAmount').val(data.depositAmount);
            $('#MonthlyRent').val(data.monthlyRent);
            $('#ContractDurationMonths').val(data.contractDurationMonths);
            $('#PaymentCycle').val(data.paymentCycle);
            $('#PaymentDayOfMonth').val(data.paymentDayOfMonth);
            $('#PaymentMethod').val(data.paymentMethod);
            $('#ContactInfo').val(data.contactInfo);

        } catch(err){

        }
    }

     const propertyForm = document.getElementById('property-form');
     const btnDone = document.getElementById('btn-done');
     btnDone.onclick = async function(e) {
        e.preventDefault();
        if(id == 0){
            await createRenterProperty();
        }
        else{
            await updateRenterProperty();
        }
     };

     async function createRenterProperty(){
        const token = localStorage.getItem('authToken');
        var formData = new FormData(propertyForm);
        let userId = 0;
        if (token) {
           const payload = JSON.parse(atob(token.split('.')[1]));
           userId = payload.id;
        }
        const renterData = {
           propertyPostId: @ViewBag.PropertyId,
           landlordId: parseInt(userId),
           depositAmount: parseFloat(formData.get('DepositAmount')),
           monthlyRent: parseFloat(formData.get('MonthlyRent')),
           contractDurationMonths: parseInt(formData.get('ContractDurationMonths')),
           paymentCycle: parseInt(formData.get('PaymentCycle')),
           paymentDayOfMonth: parseInt(formData.get('PaymentDayOfMonth')),
           startDate: null,
           paymentMethod: formData.get('PaymentMethod'),
           contactInfo: formData.get('ContactInfo'),
        };
        const res = await fetch(`http://194.233.81.64:5000/api/owner/rental-contracts/${userId}/${propertyId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                ...(token ? { 'Authorization': `Bearer ${token}` } : {})
            },
            credentials: 'include',
            body: JSON.stringify(renterData)
        });
        if (!res.ok) {
            const err = await res.json().catch(() => ({}));
            alert('Tạo property thất bại! ' + (err.message || ''));
            return;
        }
        alert('Tạo hợp đồng thành công');
        window.location.href = '/PostProperty/ListProperty';
     }

     async function updateRenterProperty(){
        const token = localStorage.getItem('authToken');
        var formData = new FormData(propertyForm);
        let userId = 0;
        if (token) {
           const payload = JSON.parse(atob(token.split('.')[1]));
           userId = payload.id;
        }
        const renterData = {
           propertyPostId: @ViewBag.PropertyId,
           landlordId: parseInt(userId),
           depositAmount: parseFloat(formData.get('DepositAmount')),
           monthlyRent: parseFloat(formData.get('MonthlyRent')),
           contractDurationMonths: parseInt(formData.get('ContractDurationMonths')),
           paymentCycle: parseInt(formData.get('PaymentCycle')),
           paymentDayOfMonth: parseInt(formData.get('PaymentDayOfMonth')),
           startDate: null,
           paymentMethod: formData.get('PaymentMethod'),
           contactInfo: formData.get('ContactInfo'),
        };
        const res = await fetch(`http://194.233.81.64:5000/api/owner/rental-contracts/${id}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
                ...(token ? { 'Authorization': `Bearer ${token}` } : {})
            },
            credentials: 'include',
            body: JSON.stringify(renterData)
        });
        if (!res.ok) {
            const err = await res.json().catch(() => ({}));
            alert('Tạo property thất bại! ' + (err.message || ''));
            return;
        }
        alert('Cập nhật hợp đồng thành công');
        window.location.href = '/PostProperty/ListProperty';
     }

</script>

