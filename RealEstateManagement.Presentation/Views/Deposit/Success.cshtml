@{
    ViewData["Title"] = "Thanh toán thành công";
}

<div class="container mx-auto px-6 py-8 text-center">
    <div class="max-w-md mx-auto bg-white rounded-xl shadow-lg p-8">
        <h2 class="text-3xl font-bold text-green-600 mb-4">🎉 Thanh toán thành công!</h2>
        <p class="text-gray-700 mb-6">Giao dịch của bạn đã được xử lý. Đang cập nhật số dư ví của bạn...</p>
        <p class="text-sm text-gray-500 mb-8">
            Mã đơn hàng PayOS: <span id="orderCodeDisplay" class="font-bold"></span>
        </p>
        <p id="depositStatusMessage" class="mt-4 text-lg font-semibold"></p>
        <a href="/" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-lg transition-colors duration-200 mt-6 inline-block">
            Quay về trang chủ
        </a>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            const urlParams = new URLSearchParams(window.location.search);
            const orderCode = urlParams.get('orderCode');
            const depositStatusMessage = document.getElementById('depositStatusMessage');
            const orderCodeDisplay = document.getElementById('orderCodeDisplay');

            if (orderCode) {
                orderCodeDisplay.textContent = orderCode;
                depositStatusMessage.className = 'text-blue-600';
                depositStatusMessage.textContent = 'Đang kiểm tra trạng thái giao dịch...';

                try {
                    const token = localStorage.getItem('authToken'); // Lấy token từ localStorage
                    if (!token) {
                        depositStatusMessage.className = 'text-red-600';
                        depositStatusMessage.textContent = 'Lỗi: Không tìm thấy token xác thực. Vui lòng đăng nhập lại.';
                        console.error('Auth token not found.');
                        return;
                    }

                    const response = await fetch(`https://localhost:7031/api/Deposit/check-payment-status?orderCode=${orderCode}`, {
                        method: 'GET',
                        headers: {
                            'Authorization': `Bearer ${token}` // Gửi token trong header
                        }
                    });

                    if (!response.ok) {
                        const errorData = await response.json();
                        throw new Error(errorData.message || 'Lỗi khi kiểm tra trạng thái thanh toán.');
                    }

                    const data = await response.json();
                    if (data.success) {
                        depositStatusMessage.className = 'text-green-600';
                        depositStatusMessage.textContent = 'Số dư ví của bạn đã được cập nhật thành công! ✨';
                        // Cập nhật số dư ví trên header nếu có hàm updateWalletBalance()
                        if (typeof updateWalletBalance === 'function') {
                            updateWalletBalance();
                        }
                    } else {
                        depositStatusMessage.className = 'text-orange-600';
                        depositStatusMessage.textContent = 'Giao dịch chưa hoàn tất hoặc đang chờ xử lý. Vui lòng kiểm tra lại sau.';
                    }
                } catch (error) {
                    console.error('Error calling check-payment-status:', error);
                    depositStatusMessage.className = 'text-red-600';
                    depositStatusMessage.textContent = `Lỗi khi xác nhận giao dịch: ${error.message}`;
                }
            } else {
                depositStatusMessage.className = 'text-red-600';
                depositStatusMessage.textContent = 'Không tìm thấy mã đơn hàng để kiểm tra trạng thái.';
            }
        });
    </script>
}