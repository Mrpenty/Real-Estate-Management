@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="container mx-auto py-8">
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-3xl font-bold text-gray-800">Quản lý bài đăng</h1>
    </div>
    <!-- Search and Filter -->
    <div class="bg-white p-4 rounded-lg shadow mb-6">
        <form id="postFilterForm" class="grid grid-cols-1 md:grid-cols-5 gap-4 items-end">
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Tìm kiếm</label>
                <input id="searchInput" type="text" placeholder="Tìm theo tiêu đề hoặc chủ nhà..." class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" />
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Trạng thái</label>
                <select id="statusFilter" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                    <option value="">Tất cả</option>
                    <option value="0">Bản nháp</option>
                    <option value="1">Chờ duyệt</option>
                    <option value="2">Đã duyệt</option>
                    <option value="3">Đã từ chối</option>
                    <option value="4">Đã cho thuê</option>
                    <option value="5">Đã bán</option>
                </select>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Từ ngày</label>
                <input id="fromDate" type="date" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" />
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Đến ngày</label>
                <input id="toDate" type="date" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" />
            </div>
            <div class="flex gap-2">
                <button type="button" onclick="applyFilters()" class="w-full bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 flex items-center justify-center">
                    <i class="fas fa-search mr-2"></i>Lọc
                </button>
                <button type="button" onclick="resetFilters()" class="w-full bg-gray-200 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-300 flex items-center justify-center">
                    <i class="fas fa-undo mr-2"></i>Đặt lại
                </button>
            </div>
        </form>
    </div>
    <!-- Table -->
    <div class="bg-white rounded-lg shadow overflow-hidden">
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200" id="postTable">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tiêu đề</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Chủ nhà</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ngày tạo</th>
                        <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Trạng thái</th>
                        <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Hành động</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Render bằng JS -->
                </tbody>
            </table>
        </div>
    </div>
    <div id="paginationBar" class="mt-4"></div>
</div>
@section Scripts {
<script>
let currentPage = 1, totalPages = 1, allPosts = [];
let currentSearch = '', currentStatus = '', currentFromDate = '', currentToDate = '';

async function loadPosts(page = 1, status = '', search = '', fromDate = '', toDate = '') {
    try {
        const data = await AdminPostService.getPosts(status, page, 10); // phân trang backend
        allPosts = data.posts;
        let filtered = [...allPosts];
        // Lọc theo search (chỉ filter FE nếu search hoặc filter ngày, còn phân trang thì backend)
        if (search) {
            const s = search.toLowerCase();
            filtered = filtered.filter(post =>
                (post.title || (post.property && post.property.title) || '').toLowerCase().includes(s) ||
                (post.name || (post.landlord && (post.landlord.fullName || post.landlord.name)) || '').toLowerCase().includes(s)
            );
        }
        if (fromDate) {
            const from = new Date(fromDate);
            filtered = filtered.filter(post => post.createdAt && new Date(post.createdAt) >= from);
        }
        if (toDate) {
            const to = new Date(toDate);
            filtered = filtered.filter(post => post.createdAt && new Date(post.createdAt) <= to);
        }
        // Nếu không search/filter ngày thì dùng luôn data.posts, không cần filter FE
        if (!search && !fromDate && !toDate) filtered = data.posts;
        totalPages = data.totalPages || Math.ceil((data.total || filtered.length) / 10);
        currentPage = data.page || page;
        renderPostTable(filtered);
        renderPagination(currentPage, totalPages);
    } catch (err) {
        document.querySelector('#postTable tbody').innerHTML = `<tr><td colspan='6' class='text-center text-red-500'>${err.message}</td></tr>`;
    }
}
function applyFilters() {
    currentSearch = document.getElementById('searchInput').value.trim();
    currentStatus = document.getElementById('statusFilter').value;
    currentFromDate = document.getElementById('fromDate').value;
    currentToDate = document.getElementById('toDate').value;
    loadPosts(1, currentStatus, currentSearch, currentFromDate, currentToDate);
}
function resetFilters() {
    document.getElementById('searchInput').value = '';
    document.getElementById('statusFilter').value = '';
    document.getElementById('fromDate').value = '';
    document.getElementById('toDate').value = '';
    currentSearch = '';
    currentStatus = '';
    currentFromDate = '';
    currentToDate = '';
    loadPosts(1);
}
function getStatusBadge(status, statusDisplay) {
    let color = 'bg-gray-200 text-gray-700';
    let display = statusDisplay || status;
    // Map số hoặc enum sang tên tiếng Việt
    const statusMap = {
        0: 'Bản nháp',
        1: 'Chờ duyệt',
        2: 'Đã duyệt',
        3: 'Đã từ chối',
        4: 'Đã cho thuê',
        5: 'Đã bán',
        'draft': 'Bản nháp',
        'pending': 'Chờ duyệt',
        'approved': 'Đã duyệt',
        'rejected': 'Đã từ chối',
        'rented': 'Đã cho thuê',
        'sold': 'Đã bán'
    };
    if (statusMap[status] !== undefined) display = statusMap[status];
    if (status === 'pending' || status === 1) color = 'bg-yellow-100 text-yellow-800';
    else if (status === 'approved' || status === 2) color = 'bg-green-100 text-green-800';
    else if (status === 'rejected' || status === 3) color = 'bg-red-100 text-red-800';
    else if (status === 'rented' || status === 4) color = 'bg-blue-100 text-blue-800';
    else if (status === 'sold' || status === 5) color = 'bg-gray-300 text-gray-800';
    else if (status === 'draft' || status === 0) color = 'bg-gray-100 text-gray-700';
    return `<span class="px-3 py-1 rounded-full text-xs font-semibold ${color}">${display}</span>`;
}
function renderPostTable(posts) {
    const tbody = document.querySelector('#postTable tbody');
    if (!posts || posts.length === 0) {
        tbody.innerHTML = `<tr><td colspan='6' class='text-center'>Không có dữ liệu</td></tr>`;
        return;
    }
    tbody.innerHTML = posts.map(post => `
        <tr class="hover:bg-blue-50 transition">
            <td class="px-6 py-4 font-medium text-gray-700">${post.id}</td>
            <td class="px-6 py-4">
                <a href="/Admin/PostDetail/${post.id}" class="text-blue-700 hover:underline font-semibold">
                    ${post.title || (post.property && post.property.title) || ''}
                </a>
            </td>
            <td class="px-6 py-4 text-gray-800">${post.name || (post.landlord && (post.landlord.fullName || post.landlord.name)) || post.landlordId || ''}</td>
            <td class="px-6 py-4 text-gray-600">${post.createdAt ? new Date(post.createdAt).toLocaleDateString('vi-VN') : ''}</td>
            <td class="px-6 py-4 text-center">${getStatusBadge(post.status, post.statusDisplay)}</td>
            <td class="px-6 py-4 text-center">
                <a href="/Admin/PostDetail/${post.id}" class="text-blue-600 hover:text-blue-900 mr-2"><i class="fas fa-eye"></i></a>
                <button onclick="deletePost(${post.id})" class="text-red-600 hover:text-red-900"><i class="fas fa-trash"></i></button>
            </td>
        </tr>
    `).join('');
}
function renderPagination(page, totalPages) {
    // Nếu không có dữ liệu, chỉ hiện Trang 1 / 1
    if (totalPages === 0) {
        document.getElementById('paginationBar').innerHTML = `<div>Trang 1 / 1</div>`;
        return;
    }
    let html = `<div>Trang ${page} / ${totalPages}</div><div class='space-x-1'>`;
    if (page > 1) html += `<button onclick='loadPosts(${page-1}, currentStatus, currentSearch, currentFromDate, currentToDate)' class='px-3 py-1 border rounded'>&laquo; Trước</button>`;
    for (let i = 1; i <= totalPages; i++) {
        if (i === page) html += `<span class='px-3 py-1 border rounded bg-blue-600 text-white'>${i}</span>`;
        else html += `<button onclick='loadPosts(${i}, currentStatus, currentSearch, currentFromDate, currentToDate)' class='px-3 py-1 border rounded'>${i}</button>`;
    }
    if (page < totalPages) html += `<button onclick='loadPosts(${page+1}, currentStatus, currentSearch, currentFromDate, currentToDate)' class='px-3 py-1 border rounded'>Sau &raquo;</button>`;
    html += `</div>`;
    document.getElementById('paginationBar').innerHTML = html;
}
// Khởi tạo
loadPosts(1);
</script>
} 