<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
    <meta http-equiv="Pragma" content="no-cache" />
    <meta http-equiv="Expires" content="0" />

    <title>@ViewData["Title"] RealEstateManagement</title>
@*     <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script> *@
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/authService.js" asp-append-version="true"></script>
    <script src="~/js/postPropertyService.js"></script>
    <script src="~/js/helper.js" asp-append-version="true"></script>
</head>
<body>
    <header class="border-b" style="background-color:white;width:100%">
        <div class="w-full px-4 py-4 flex items-center justify-between">
            <div class="flex items-center" style="cursor:pointer" onclick="window.location.href='/'">
                <h1 class="text-xl font-bold">
                    <span class="text-blue-700">RealEstateManagement</span>
                </h1>
            </div>

            <div class="flex flex-grow mx-6 items-center">
                <div class="flex items-center bg-gray-100 rounded-full px-3 py-1 w-full max-w-md">
                    <i class="fas fa-map-marker-alt text-gray-500 mr-2"></i>
                    <input type="button" onclick="showFilterPopup('search-popup')" placeholder="Tìm theo khu vực" id="searchInput" class="input-bootstrap bg-transparent outline-none w-full text-sm" />
                </div>
                <button onclick="showFilterPopup('filter-popup')" class="ml-2 border rounded-full px-3 py-1 text-sm hover:bg-gray-100">
                    <i class="fas fa-filter mr-1"></i> Bộ lọc
                </button>
            </div>

            <div class="flex items-center space-x-4">
                <a href="/Home/ListFavorite" class="text-gray-700 hover:text-blue-600"><i class="far fa-heart mr-1"></i> Tin đã lưu</a>
                
                <!-- Authenticated User -->
                <div id="userProfileNavItem" style="display: none;" class="flex items-center space-x-4">
                    <a href="/Profile" id="userProfileLink" class="text-gray-700 hover:text-blue-600"></a>
                    <a href="#" onclick="handleLogout(event)" class="text-gray-700 hover:text-blue-600"><i class="fas fa-sign-out-alt mr-1"></i> Đăng xuất</a>
                </div>

                <!-- Unauthenticated User -->
                <div id="authNavItems">
                    <a href="/Auth/Register" class="text-gray-700 hover:text-blue-600"><i class="fas fa-user-plus mr-1"></i> Đăng ký</a>
                    <a href="/Auth/Login" class="text-gray-700 hover:text-blue-600"><i class="fas fa-sign-in-alt mr-1"></i> Đăng nhập</a>
                </div>


                <a href="/PostProperty/CreateProperty" class="bg-orange-500 hover:bg-orange-600 text-white font-semibold px-4 py-1 rounded-full text-sm"><i class="fas fa-pen-alt mr-1"></i> Đăng tin</a>
            </div>
        </div>

        <nav class="border-b border-gray-200 shadow-sm">
            <div class="container mx-auto px-4">
                <ul class="flex space-x-6 text-base font-medium pt-4">

                    <li><a href="/" id="listPostId" class="nav-link border-b-2 pb-1 border-gray-200">Phòng trọ</a></li>
                    <li><a href="/nha-nguyen-can" class="nav-link border-b-2 pb-1 border-gray-200">Nhà nguyên căn</a></li>
                    <li><a href="/can-ho-chung-cu" class="nav-link border-b-2 pb-1 border-gray-200">Căn hộ chung cư</a></li>
                    <li><a href="/can-ho-mini" class="nav-link border-b-2 pb-1 border-gray-200">Căn hộ mini</a></li>
                    <li><a href="/can-ho-dich-vu" class="nav-link border-b-2 pb-1 border-gray-200">Căn hộ dịch vụ</a></li>
                    <li><a href="/o-ghep" class="nav-link border-b-2 pb-1 border-gray-200">Ở ghép</a></li>
                    <li><a href="/mat-bang" class="nav-link border-b-2 pb-1 border-gray-200">Mặt bằng</a></li>
                    <li><a href="/blog" class="nav-link border-b-2 pb-1 border-gray-200">Blog</a></li>
                    <li><a href="/bang-gia" class="nav-link border-b-2 pb-1 border-gray-200">Bảng giá dịch vụ</a></li>
                </ul>
            </div>
        </nav>

    </header>
    <main class=" mx-auto px-4 py-6" style="margin-right:14rem !important;margin-left:14rem !important">
        @RenderBody()
    </main>
    <!-- Popup -->
    <div id="filter-popup" class="hidden fixed inset-0 bg-black/30 flex items-center justify-center z-50">
        <div class="bg-white rounded-2xl w-full max-w-lg shadow-lg">

            <div class="sticky top-0 bg-white z-10 px-4 pt-4 pb-3 rounded-t-lg shadow-sm border-b mb-2">
                <div class="flex justify-between items-center">
                    <h2 class="text-lg font-semibold">Bộ lọc</h2>
                    <button onclick="hideFilterPopup('filter-popup')" class="text-2xl text-gray-500 hover:text-red-500">&times;</button>
                </div>
            </div>

            <div class="px-4 overflow-y-auto h-[60vh]">
                <div class="mb-6">
                    <h3 class="font-semibold mb-2">Danh mục cho thuê</h3>
                    <div id="rental-type" class="grid grid-cols-3 gap-2">

                        <button value="0" class="rental-btn border-2 border-orange-500 rounded-lg py-2 px-3 text-sm flex flex-col items-center bg-orange-50 text-orange-600">
                            <span>Phòng trọ</span>
                        </button>
                        <button value="1" class="rental-btn border-2 rounded-lg py-2 px-1 text-sm flex flex-col items-center"><span>Nhà riêng</span></button>
                        <button value="2" class="rental-btn border-2 rounded-lg py-2 px-1 text-sm flex flex-col items-center"><span>Ở ghép</span></button>
                        <button value="0" class="rental-btn border-2 rounded-lg py-2 px-1 text-sm flex flex-col items-center"><span>Mặt bằng</span></button>
                        <button value="0" class="rental-btn border-2 rounded-lg py-2 px-1 text-sm flex flex-col items-center"><span>Căn hộ chung cư</span></button>
                        <button value="0" class="rental-btn border-2 rounded-lg py-2 px-1 text-sm flex flex-col items-center"><span>Căn hộ mini</span></button>
                    </div>
                </div>

                <div class="mb-6">
                    <h3 class="font-semibold mb-2">Lọc theo khu vực</h3>
                    <div class="grid grid-cols-3 gap-2">

                        <select id="filterProvinceId" onchange="filterWard()" class="border-2 border-orange-500 px-3 py-2 bg-orange-50 text-orange-600 rounded-lg text-sm text-gray-700">
                        </select>
                        <select id="filterWarnId" onchange="filterStreet()" class="border-2 border-orange-500 bg-orange-50 text-orange-600 px-3 py-2 rounded-lg text-sm text-gray-700">
                        </select>
                        <select id="filterStreetId" class="border-2 border-orange-500 bg-orange-50 text-orange-600 px-3 py-2 rounded-lg text-sm text-gray-700">
                        </select>
                    </div>
                </div>

                <div class="mb-6">
                    <h3 class="font-semibold mb-2">Khoảng giá</h3>
                    <div id="rental-type-price" class="flex flex-wrap gap-2">

                        <button id="price-1" data-scope="all" class="rental-btn border-2 rounded-full px-4 py-1 text-sm">Tất cả</button>
                        <button id="price-2" data-price-max='1' data-scope="lower" class="rental-btn border-2 rounded-full px-4 py-1 text-sm">Dưới 1 triệu</button>
                        <button id="price-3" data-price-min='1' data-price-max='2' data-scope="equal" class="rental-btn border-2 rounded-full px-4 py-1 text-sm">1 - 2 triệu</button>
                        <button id="price-4" data-price-min='2' data-price-max='3' data-scope="equal" class="rental-btn border-2 rounded-full px-4 py-1 text-sm">2 - 3 triệu</button>
                        <button id="price-5" data-price-min='3' data-price-max='5' data-scope="equal" class="rental-btn border-2 rounded-full px-4 py-1 text-sm">3 - 5 triệu</button>
                        <button id="price-6" data-price-min='5' data-price-max='7' data-scope="equal" class="rental-btn border-2 rounded-full px-4 py-1 text-sm">5 - 7 triệu</button>
                        <button id="price-7" data-price-min='7' data-price-max='10' data-scope="equal" class="rental-btn border-2 rounded-full px-4 py-1 text-sm">7 - 10 triệu</button>
                        <button id="price-8" data-price-min='10' data-price-max='15' data-scope="equal" class="rental-btn border-2 rounded-full px-4 py-1 text-sm">10 - 15 triệu</button>
                        <button id="price-9" data-price-min='15' data-scope="higher" class="rental-btn border-2 rounded-full px-4 py-1 text-sm">Trên 15 triệu</button>

                    </div>
                </div>

                <div class="mb-6">
                    <h3 class="font-semibold mb-2">Khoảng diện tích</h3>
                    <div id="rental-type-acreage" class="flex flex-wrap gap-2">

                        <button id="area-1" data-scope="all" class="rental-btn border-2 rounded-full px-4 py-1 text-sm">Tất cả</button>
                        <button id="area-2" data-area-max='20' data-scope="lower" class="rental-btn border-2 rounded-full px-4 py-1 text-sm">Dưới 20m²</button>
                        <button id="area-3" data-area-min='20' data-area-max='30' data-scope="equal" class="rental-btn border-2 rounded-full px-4 py-1 text-sm">Từ 20m² - 30m²</button>
                        <button id="area-4" data-area-min='30' data-area-max='50' data-scope="equal" class="rental-btn border-2 rounded-full px-4 py-1 text-sm">Từ 30m² - 50m²</button>
                        <button id="area-5" data-area-min='50' data-area-max='70' data-scope="equal" class="rental-btn border-2 rounded-full px-4 py-1 text-sm">Từ 50m² - 70m²</button>
                        <button id="area-6" data-area-min='70' data-area-max='90' data-scope="equal" class="rental-btn border-2 rounded-full px-4 py-1 text-sm">Từ 70m² - 90m²</button>
                        <button id="area-7" data-area-min='90' data-scope="higher" class="rental-btn border-2 rounded-full px-4 py-1 text-sm">Trên 90m²</button>
                    </div>
                </div>

                <div class="mb-6">
                    <h3 class="font-semibold mb-2">Đặc điểm nổi bật</h3>
                    <div id="rental-type-special" class="flex flex-wrap gap-2">


@*                         <button class="rental-btn border-2 rounded-full px-4 py-1 text-sm">Có gác</button>
                        <button class="rental-btn border-2 rounded-full px-4 py-1 text-sm">Kệ bếp</button>
                        <button class="rental-btn border-2 rounded-full px-4 py-1 text-sm">Có máy lạnh</button>
                        <button class="rental-btn border-2 rounded-full px-4 py-1 text-sm">Có máy giặt</button>
                        <button class="rental-btn border-2 rounded-full px-4 py-1 text-sm">Có tủ lạnh</button>
                        <button class="rental-btn border-2 rounded-full px-4 py-1 text-sm">Có thang máy</button>
                        <button class="rental-btn border-2 rounded-full px-4 py-1 text-sm">Không chung chủ</button>
                        <button class="rental-btn border-2 rounded-full px-4 py-1 text-sm">Giờ giấc tự do</button>
                        <button class="rental-btn border-2 rounded-full px-4 py-1 text-sm">Có bảo vệ 24/24</button>

                        <button class="rental-btn border-2 rounded-full px-4 py-1 text-sm">Có hầm để xe</button> *@
                    </div>
                </div>
            </div>

            <div class="sticky bottom-0 bg-white w-full px-4 pt-2 pb-4 border-t rounded-b-lg">

                <button type="button" onclick="filterAdvanced()" class="w-full bg-orange-500 hover:bg-orange-600 text-white font-semibold py-3 rounded-xl text-base shadow">Áp dụng</button>
            </div>

        </div>
    </div>

    <!-- Popup Search-->
    <div id="search-popup" class=" fixed inset-0 bg-black/30 flex items-center justify-center z-50 hidden">
        <div class="bg-white rounded-2xl w-full max-w-lg shadow-lg">

            <div class="sticky top-0 bg-white z-10 px-4 pt-4 pb-3 rounded-t-lg shadow-sm border-b mb-2">
                <div class="flex justify-between items-center">
                    <button id="backBtn" class="text-xl hidden">&larr;</button>
                    <h2 id="modalTitle" class="text-lg font-semibold"></h2>
                    <button onclick="hideFilterPopup('search-popup')" class="text-2xl text-gray-500 hover:text-red-500">&times;</button>
                </div>
            </div>

            <div id="modalContent" class="px-4 overflow-y-auto h-[60vh]">

                <div id="modalContent" class="flex-1">
                </div>
            </div>

            <div class="sticky bottom-0 bg-white w-full px-4 pt-2 pb-4 border-t rounded-b-lg">
            </div>

        </div>
    </div>


    <script>


        function hideFilterPopup(id) {
            document.getElementById(id).classList.add('hidden');
        }

        function showFilterPopup(id) {
            document.getElementById(id).classList.remove('hidden');
        }
        listSelectedSingleChoice();

        function listSelectedSingleChoice(){
            const listSelecter = ['rental-type','rental-type-price','rental-type-acreage'];
            listSelecter.forEach(item => {
                selectedSingleChoice(item);
            });
        }

        function selectedSingleChoice(idSelecter){
            const buttons = document.querySelectorAll(`#${idSelecter} .rental-btn`);

            buttons.forEach(btn => {
              btn.addEventListener('click', () => {
                buttons.forEach(b => {

                  b.classList.remove('border-orange-500','bg-orange-50', 'text-orange-600');
                  b.classList.add('border-gray-300','bg-white');
                });
                btn.classList.remove('border-gray-300','bg-white');
                btn.classList.add('border-orange-500', 'bg-orange-50','text-orange-600');
              });
            });
        }


        let level = 0;

        let selectedProvince = {id:""};
        let selectedWard = { id: "" };
        let selectedStreet = { id: "" };
        let locations = [];

        const href = window.location.origin;
        const urlParamParents = new URLSearchParams(window.location.search);

        const modal = document.getElementById("search-popup");
        const content = document.getElementById("modalContent");
        const title = document.getElementById("modalTitle");
        const backBtn = document.getElementById("backBtn");


        getAllLocationAsync();
        setTimeout(() => {
            renderProvinces();
        },300);

        backBtn.onclick = () => {
          if (level === 2) {
            level = 1;
            renderWard(selectedProvince);
          } else if (level === 1) {
            level = 0;
            renderProvinces();
          }
        };


        async function getAllLocationAsync() {
            locations = await getAllLocation();
            let obj = getValueFromParam(locations);
            $('#searchInput').val(obj.valueSearch);
            $('#titleHomePage').html(obj.valueTitle);
            selectedProvince = obj.selectedProvince;
            selectedWard = obj.selectedWard;
            selectedStreet = obj.selectedStreet;

            let html = '';
            let htmlWard = '';
            let htmlStreet = '';
            locations.forEach(i => {
                html += `<option value='${i.id}'>${i.name}</option>`;
            })
            $('#filterProvinceId').html(html);
            if (selectedProvince.id != "") {
                $('#filterProvinceId').val(selectedProvince.id);
                selectedProvince.wards.forEach(i => {
                    htmlWard += `<option value='${i.id}'>${i.name}</option>`;
                })
            }
            else {
                htmlWard += `<option value='0'>All</option>`;
            }
            $('#filterWarnId').html(htmlWard);

            if (selectedWard.id != "") {
                $('#filterWarnId').val(selectedWard.id);
                selectedWard.streets.forEach(i => {
                    htmlStreet += `<option value='${i.id}'>${i.name}</option>`;
                })
            }
            else {
                htmlStreet += `<option value='0'>All</option>`;
            }
            $('#filterStreetId').html(htmlStreet);
            if (selectedStreet.id != "") $('#filterStreetId').val(selectedStreet.id);

            const filterAmenity = urlParamParents.get('filterAmenity') ?? "";
            await fillDataAmenity(filterAmenity);

            const filterCategory = urlParamParents.get('filterCategory') ?? -1;
            const filterPrice = urlParamParents.get('filterPrice') ?? "";
            const filterArea = urlParamParents.get('filterArea') ?? "";

            if (filterPrice != ""){
                let idPrice = filterPrice.split(',')[3];
                document.getElementById(idPrice).classList.add('border-orange-500', 'bg-orange-50', 'text-orange-600');
                document.getElementById(idPrice).classList.remove('border-gray-300', 'bg-white');
            }
            if (filterArea != "") {
                let idArea = filterArea.split(',')[3];
                document.getElementById(idArea).classList.add('border-orange-500', 'bg-orange-50', 'text-orange-600');
                document.getElementById(idArea).classList.remove('border-gray-300', 'bg-white');
            }

            //console.log(locations);
        }

        function renderProvinces() {
          
          level = 0;
          title.innerText = "Chọn theo khu vực";
          backBtn.classList.add("hidden");
          content.innerHTML = "";



            locations.forEach(province => {
                const checked = province.id == selectedProvince.id ? "checked" : "";
                const item = createCheckboxItem(province.name, checked, () => {
                    selectedProvince = province;
                    selectedWard = { id: "" };
                    selectedStreet = { id: "" };
                    renderWard(province);

                    if (province.id == 0) {
                        searchAdvanced();
                    }
                });
                content.appendChild(item);
            });
        }

        function renderWard(province) {
          level = 1;
          title.innerText = province.name;
          backBtn.classList.remove("hidden");
          content.innerHTML = "";



            province.wards.forEach(ward => {
                const checked = ward.id == selectedWard.id ? "checked" : "";
                const item = createCheckboxItem(ward.name, checked, () => {
                    selectedWard = ward;
                    selectedStreet = { id: "" };
                    renderStreets(province, ward);

                    if (ward.id == 0) {
                        searchAdvanced();
                    }
                });
                content.appendChild(item);

            });
        }

        function renderStreets(province, ward) {
            level = 2;
            title.innerText = ward.name;
            content.innerHTML = "";

            ward.streets.forEach(street => {
                const checked = street.id == selectedStreet.id ? "checked" : "";
                const item = createCheckboxItem(street.name, checked, () => {
                    selectedStreet = street;
                    searchAdvanced();
                    //hideFilterPopup('search-popup');
                });
                content.appendChild(item);
            });
        }

        function createCheckboxItem(label, checked, onClick) {
          const div = document.createElement("div");
          div.className = "flex items-center gap-2 py-2 px-3 border-b cursor-pointer hover:bg-gray-100";

          const input = document.createElement("input");
          input.type = "checkbox";
          input.checked = checked;
          input.className = "form-checkbox w-4 h-4 text-orange-500";
          input.onclick = (e) => {
            e.stopPropagation();
            onClick();
          };

          const span = document.createElement("span");
          span.innerText = label;
          div.appendChild(input);
          div.appendChild(span);

          div.onclick = () => onClick();

          return div;
        }

        function updateNavigation() {
            if (authService.isAuthenticated()) {
                document.getElementById('authNavItems').style.display = 'none';
                
                const userProfileNav = document.getElementById('userProfileNavItem');
                userProfileNav.style.display = 'flex';
                
                const user = authService.getCurrentUser();
                if(user && user.name) {
                    document.getElementById('userProfileLink').innerText = `Chào, ${user.name}`;
                }

            } else {
                document.getElementById('authNavItems').style.display = 'block';
                document.getElementById('userProfileNavItem').style.display = 'none';
            }
        }
        function searchAdvanced() {
            const newHref = addParamsToHref(href, {
                province: selectedProvince.id ?? 0,
                ward: selectedWard.id ?? 0,
                street: selectedStreet.id ?? 0
            });
            window.location.href = newHref;
        }

        async function handleLogout(event) {
            event.preventDefault();
            await authService.logout();
            window.location.href = '/';
        }

        document.addEventListener('DOMContentLoaded', updateNavigation);
    </script>
</body>
</html>